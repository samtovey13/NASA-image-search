{"version":3,"sources":["requests/getImages.js","components/Search.js","components/SearchResults.js","components/App.js","reportWebVitals.js","index.js"],"names":["getImages","query","axios","get","then","response","status","data","collection","items","filter","image","media_type","map","links","href","catch","err","console","log","Promise","resolve","Search","setValue","handleSubmit","className","onSubmit","data-testid","type","placeholder","onChange","e","target","value","SearchResults","results","length","index","src","alt","App","useState","setResults","event","a","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TA4BeA,EA1BG,SAACC,GACjB,OAAKA,EAGIC,IACJC,IADI,+CACwCF,IAC5CG,MAAK,SAACC,GACL,OAAwB,MAApBA,EAASC,OACUD,EAASE,KAAKC,WAAWC,MACVC,QAAO,SAAAC,GAAK,MAAiC,UAA7BA,EAAMJ,KAAK,GAAGK,cACpCC,KAAI,SAAAF,GAAK,OAAIA,EAAMG,MAAM,GAAGC,QAE7B,MAApBV,EAASC,OACX,CAAC,KACqB,MAApBD,EAASC,OACX,CAAC,KACqB,MAApBD,EAASC,OACX,CAAC,UADH,KAIRU,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAnBTG,QAAQC,QAAQ,KC4BZC,EA3BA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAE1B,OAAO,mCACL,uBAAMC,UAAU,cAAcC,SAAUF,EAAcG,cAAY,cAAlE,UACE,uBACEF,UAAU,eACVG,KAAK,OACLC,YAAY,SACZF,cAAY,eACZG,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOC,UAErC,wBACER,UAAU,gBACVG,KAAK,SACLD,cAAY,gBAHd,sBCoBSO,G,MAhCO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACtB,OAAwB,IAAnBA,EAAQC,QAA+B,MAAfD,EAAQ,KAAiBA,EAAQC,OACrD,mBAAGX,UAAU,gBAAb,wBACqB,IAAnBU,EAAQC,QAA+B,MAAfD,EAAQ,GAClC,mBAAGV,UAAU,gBAAb,2CACqB,IAAnBU,EAAQC,QAA+B,MAAfD,EAAQ,GAClC,mBAAGV,UAAU,gBAAb,iCAEA,qCACL,mBAAGA,UAAU,wBAAb,4BACA,sBAAKA,UAAU,wBAAwBE,cAAY,wBAAnD,UAEIQ,EAAQtB,KAAI,SAACF,EAAO0B,GAAR,OACV,sBAAMZ,UAAU,gBAAhB,SAA+D,qBAC7DA,UAAU,gBACVa,IAAK3B,EACL4B,IAAI,OAEJZ,cAAA,uBAA6BU,IALgC,iBAI9CA,KAJjB,wBAAsDA,OAS1D,sBAAMZ,UAAU,uBCKTe,MAzBf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNN,EADM,KACGO,EADH,OAEaD,mBAAS,IAFtB,mBAENR,EAFM,KAECV,EAFD,KAIPC,EAAY,uCAAG,WAAOmB,GAAP,SAAAC,EAAA,6DACnBD,EAAME,iBADa,KAEnBH,EAFmB,SAEF1C,EAAUiC,GAFR,6EAAH,sDAKlB,OACE,sBAAKR,UAAU,MAAf,UACE,qBACEA,UAAU,OACVc,IAAI,YACJD,IAAI,yEACJX,cAAY,cAGd,cAAC,EAAD,CAAQJ,SAAUA,EAAUC,aAAcA,IAE1C,cAAC,EAAD,CAAeW,QAASA,QCdfW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.440e306f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getImages = (query) => {\n  if (!query) {\n    return Promise.resolve([]);\n  } else {\n    return axios\n      .get(`https://images-api.nasa.gov/search?q=${query}`)\n      .then((response) => {\n        if (response.status === 200 ){\n          const imageResults = response.data.collection.items;\n          const filteredImages = imageResults.filter(image => image.data[0].media_type === \"image\");\n          const images = filteredImages.map(image => image.links[0].href);\n          return images;\n        } else if (response.status === 404) {\n          return [404];\n        } else if (response.status === 500) {\n          return [500];\n        } else if (response.status === 400) {\n          return [400];\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n};\n\nexport default getImages;","import '../styles/Search.css';\nimport React from 'react';\nimport '../requests/getImages';\nimport PropTypes from 'prop-types';\n\nconst Search = ({ setValue, handleSubmit }) => {\n\n  return <>\n    <form className=\"search-form\" onSubmit={handleSubmit} data-testid=\"search-form\">\n      <input \n        className=\"search-input\"\n        type=\"text\"\n        placeholder=\"Search\"\n        data-testid=\"search-input\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n      <button\n        className=\"search-button\"\n        type=\"submit\"\n        data-testid=\"search-button\"\n      >\n        GO\n      </button>\n    </form> \n  </>\n}\n\nSearch.propTypes = {\n  setValue: PropTypes.func,\n  handleSubmit: PropTypes.func\n}\n\nexport default Search;","import '../styles/SearchResults.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchResults = ({results}) => {\n  if ((results.length === 1 && results[0] === 404) || (!results.length)) {\n    return <p className=\"error-message\">No results</p>\n  } else if (results.length === 1 && results[0] === 500) {\n    return <p className=\"error-message\">Server error, try again later</p>\n  } else if (results.length === 1 && results[0] === 400) {\n    return <p className=\"error-message\">Invalid search term</p>\n  } else {\n    return <>\n      <p className=\"search-results-header\">Search Results</p>\n      <div className=\"search-results-images\" data-testid=\"search-results-images\">\n        {\n          results.map((image, index) => (\n            <span className=\"image-wrapper\" key={`image-wrapper-${index}`}><img\n              className=\"results-image\"\n              src={image} \n              alt=\"NASA\" \n              key={`result-${index}`}\n              data-testid={`image-result-${index}`}\n            /></span>\n          ))\n        }\n        <span className=\"last-child\"></span>\n      </div>\n    </>\n  }\n}\n\nSearchResults.propTypes = {\n  results: PropTypes.array\n}\n\nexport default SearchResults;","import React, { useState } from 'react';\nimport '../styles/App.css';\nimport Search from './Search';\nimport SearchResults from './SearchResults';\nimport getImages from '../requests/getImages';\n\nfunction App() {\n  const [results, setResults] = useState([]);\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setResults(await getImages(value));\n  }\n\n  return (\n    <div className=\"App\">\n      <img \n        className=\"logo\" \n        alt=\"NASA logo\"\n        src=\"https://cdn.cnn.com/cnnnext/dam/assets/200424060716-nasa-worm-logo.jpg\" \n        data-testid=\"NASA-logo\"\n      />\n\n      <Search setValue={setValue} handleSubmit={handleSubmit} />\n\n      <SearchResults results={results} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}